// admin.js - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç—è–º–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–æ–π
const newsApiUrl = "/data/news.json";
let currentNews = [];

// DOM —ç–ª–µ–º–µ–Ω—Ç—ã
const newsForm = document.getElementById("news-form");
const newsList = document.getElementById("news-list");
const messageBox = document.getElementById("out");
const submitBtn = document.getElementById("submit-btn");

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function showMessage(message, isError = false) {
  messageBox.innerHTML = `<div class="message ${isError ? "error" : "success"}">${message}</div>`;
  setTimeout(() => (messageBox.innerHTML = ""), 3000);
}

function formatDate(dateStr) {
  const date = new Date(dateStr);
  return date.toLocaleDateString("ru-RU", {
    day: "2-digit",
    month: "long",
    year: "numeric",
  });
}

function validateNewsData(formData) {
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞—Ç—ã
  if (!formData.get("date")) {
    throw new Error("–£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É –ø—É–±–ª–∏–∫–∞—Ü–∏–∏");
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –¥–∞—Ç—ã
  const date = new Date(formData.get("date"));
  if (isNaN(date.getTime())) {
    throw new Error("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã");
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–π —è–∑—ã–∫–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏
  const hasRussian = formData.get("title_ru")?.trim() && formData.get("content_ru")?.trim();
  const hasKyrgyz = formData.get("title_ky")?.trim() && formData.get("content_ky")?.trim();

  if (!hasRussian && !hasKyrgyz) {
    throw new Error("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ (–∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ) —Ö–æ—Ç—è –±—ã –Ω–∞ –æ–¥–Ω–æ–º —è–∑—ã–∫–µ");
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const imageUrl = formData.get("image")?.trim();
  if (imageUrl) {
    try {
      new URL(imageUrl);
    } catch (e) {
      throw new Error("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è");
    }
  }

  return true;
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π
async function loadNews() {
  try {
    const response = await fetch(newsApiUrl);
    if (!response.ok) throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${response.status}`);

    currentNews = await response.json();
    sortNews();
    renderNewsList();
    return true;
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–æ–≤–æ—Å—Ç–µ–π:", error);
    showMessage("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–æ–≤–æ—Å—Ç–µ–π", true);
    return false;
  }
}

// –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π
function sortNews() {
  if (!Array.isArray(currentNews)) return;
  
  currentNews.sort((a, b) => {
    if (!a || !b) return 0;

    // –°–Ω–∞—á–∞–ª–∞ –ø–æ –¥–∞—Ç–µ (–Ω–æ–≤—ã–µ —Å–≤–µ—Ä—Ö—É)
    const dateA = a.date ? new Date(a.date) : new Date(0);
    const dateB = b.date ? new Date(b.date) : new Date(0);
    const dateComparison = dateB - dateA;
    if (dateComparison !== 0) return dateComparison;

    // –ü—Ä–∏ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–π –¥–∞—Ç–µ - –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫—É
    const titleA = a.title?.ru || a.title?.ky || "";
    const titleB = b.title?.ru || b.title?.ky || "";
    return titleA.toLowerCase().localeCompare(titleB.toLowerCase());
  });
}

// –†–µ–Ω–¥–µ—Ä —Å–ø–∏—Å–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π
function renderNewsList() {
  if (!newsList) return;

  if (currentNews.length === 0) {
    newsList.innerHTML = '<div class="no-news">–ù–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π</div>';
    return;
  }

  const newsHtml = currentNews
    .map(
      (news, index) => `
        <article class="news-item-admin">
            <div class="news-item-header">
                <span class="news-date">${formatDate(news.date)}</span>
                <div class="news-actions">
                    <button onclick="moveNews(${index}, -1)" class="btn-icon" title="–ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –≤—ã—à–µ" ${index === 0 ? "disabled" : ""}>‚Üë</button>
                    <button onclick="moveNews(${index}, 1)" class="btn-icon" title="–ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –Ω–∏–∂–µ" ${index === currentNews.length - 1 ? "disabled" : ""}>‚Üì</button>
                    <button onclick="editNews(${index})" class="btn-icon" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">‚úèÔ∏è</button>
                    <button onclick="deleteNews(${index})" class="btn-icon" title="–£–¥–∞–ª–∏—Ç—å">üóëÔ∏è</button>
                </div>
            </div>
            
            <div class="news-content-preview">
                ${
                  news.image
                    ? `
                    <div class="news-image-preview">
                        <img src="${news.image}" alt="${news.title?.ru || news.title?.ky || "–ù–æ–≤–æ—Å—Ç—å"}" 
                             onerror="this.onerror=null;this.src='/images/no-image.png';">
                    </div>
                `
                    : ""
                }
                
                <div class="news-text-preview">
                    ${
                      news.title?.ru
                        ? `
                        <div class="news-lang-block">
                            <span class="lang-label">RU</span>
                            <h3>${news.title.ru}</h3>
                            <p>${news.short?.ru || ""}</p>
                        </div>
                    `
                        : ""
                    }
                    
                    ${
                      news.title?.ky
                        ? `
                        <div class="news-lang-block">
                            <span class="lang-label">KG</span>
                            <h3>${news.title.ky}</h3>
                            <p>${news.short?.ky || ""}</p>
                        </div>
                    `
                        : ""
                    }
                </div>
            </div>
        </article>
    `,
    )
    .join("");

  newsList.innerHTML = newsHtml;
}

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç—è–º–∏
async function deleteNews(index) {
  if (!Array.isArray(currentNews) || index < 0 || index >= currentNews.length) {
    showMessage("–û—à–∏–±–∫–∞: –Ω–æ–≤–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", true);
    return;
  }

  if (!confirm("–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É –Ω–æ–≤–æ—Å—Ç—å?")) {
    return;
  }

  try {
    const newsId = currentNews[index].id;
    const response = await fetch(`/api/news/${newsId}`, {
      method: 'DELETE',
      headers: {
        'Content-Type': 'application/json'
      }
    });

    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }

    await response.json();
    
    currentNews.splice(index, 1);
    renderNewsList();
    
    showMessage("–ù–æ–≤–æ—Å—Ç—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞");
    
    // –ï—Å–ª–∏ –±—ã–ª–∞ –æ—Ç–∫—Ä—ã—Ç–∞ —Ñ–æ—Ä–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –Ω–æ–≤–æ—Å—Ç–∏, –æ—á–∏—â–∞–µ–º –µ—ë
    if (newsForm.dataset.editIndex === index.toString()) {
      resetForm();
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏:", error);
    showMessage("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏", true);
  }
}

async function moveNews(index, direction) {
  if (!Array.isArray(currentNews) || index < 0 || index >= currentNews.length) {
    showMessage("–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π –∏–Ω–¥–µ–∫—Å –Ω–æ–≤–æ—Å—Ç–∏", true);
    return;
  }

  const newIndex = index + direction;
  if (newIndex < 0 || newIndex >= currentNews.length) return;

  const item = currentNews[index];
  currentNews.splice(index, 1);
  currentNews.splice(newIndex, 0, item);
  renderNewsList();
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞
  try {
    await saveNews();
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–æ—Ä—è–¥–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π:", error);
    showMessage("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–æ—Ä—è–¥–∫–∞", true);
  }
}

function editNews(index) {
  const news = currentNews[index];

  // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É –¥–∞–Ω–Ω—ã–º–∏ –Ω–æ–≤–æ—Å—Ç–∏
  document.getElementById("date").value = news.date;
  document.getElementById("image").value = news.image || "";

  // –ó–∞–ø–æ–ª–Ω—è–µ–º —è–∑—ã–∫–æ–≤—ã–µ –ø–æ–ª—è
  ["ru", "ky"].forEach((lang) => {
    if (news.title?.[lang]) {
      document.querySelector(`[name="title_${lang}"]`).value = news.title[lang];
    }
    if (news.short?.[lang]) {
      document.querySelector(`[name="short_${lang}"]`).value = news.short[lang];
    }
    if (news.content?.[lang]) {
      document.querySelector(`[name="content_${lang}"]`).value =
        news.content[lang];
    }
  });

  // –ú–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –∏ –¥–æ–±–∞–≤–ª—è–µ–º data-attribute –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  submitBtn.textContent = "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è";
  newsForm.dataset.editIndex = index;

  // –°–∫—Ä–æ–ª–ª–∏–º –∫ —Ñ–æ—Ä–º–µ
  newsForm.scrollIntoView({ behavior: "smooth" });
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π
async function saveNews() {
  try {
    const response = await fetch(newsApiUrl, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(currentNews),
    });

    if (!response.ok) throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${response.status}`);

    showMessage("–ù–æ–≤–æ—Å—Ç–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã");
    renderNewsList();
    return true;
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏:", error);
    showMessage("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π", true);
    return false;
  }
}

// –§—É–Ω–∫—Ü–∏—è —Å–±—Ä–æ—Å–∞ —Ñ–æ—Ä–º—ã
function resetForm() {
  newsForm.reset();
  delete newsForm.dataset.editIndex;
  submitBtn.textContent = "–°–æ–∑–¥–∞—Ç—å";
  // –û—á–∏—â–∞–µ–º –≤—Å–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –ø–æ–ª—è
  newsForm.querySelectorAll('input[type="text"], textarea').forEach(field => {
    field.value = "";
  });
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã
newsForm.addEventListener("submit", async (event) => {
  event.preventDefault();

  try {
    const formData = new FormData(event.target);
    validateNewsData(formData);

    const newsItem = {
      id: Date.now().toString(),
      date: formData.get("date"),
      image: formData.get("image")?.trim() || "",
      title: {},
      short: {},
      content: {},
    };

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —è–∑—ã–∫–æ–≤—ã—Ö –≤–µ—Ä—Å–∏–π
    ["ru", "ky"].forEach((lang) => {
      const title = formData.get(`title_${lang}`)?.trim();
      if (title) {
        newsItem.title[lang] = title;
        newsItem.short[lang] = formData.get(`short_${lang}`)?.trim() || "";
        newsItem.content[lang] = formData.get(`content_${lang}`)?.trim() || "";
      }
    });

    const editIndex = parseInt(newsForm.dataset.editIndex);
    if (!isNaN(editIndex) && editIndex >= 0 && editIndex < currentNews.length) {
      // –†–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      currentNews[editIndex] = {
        ...currentNews[editIndex],
        ...newsItem,
      };
    } else {
      // –†–µ–∂–∏–º —Å–æ–∑–¥–∞–Ω–∏—è
      currentNews.unshift(newsItem);
    }

    if (await saveNews()) {
      resetForm();
      sortNews();
      renderNewsList();
      showMessage(editIndex >= 0 ? "–ù–æ–≤–æ—Å—Ç—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞" : "–ù–æ–≤–æ—Å—Ç—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞");
    }
  } catch (error) {
    showMessage(error.message, true);
  }
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener("DOMContentLoaded", loadNews);
